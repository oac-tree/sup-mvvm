<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE QtCreatorProject>
<!-- Written by QtCreator 4.15.2, 2021-08-12T21:59:19. -->
<qtcreator>
 <data>
  <variable>EnvironmentId</variable>
  <value type="QByteArray">{d88372ef-3b87-4897-a5e8-af26567b1bb5}</value>
 </data>
 <data>
  <variable>ProjectExplorer.Project.ActiveTarget</variable>
  <value type="int">0</value>
 </data>
 <data>
  <variable>ProjectExplorer.Project.EditorSettings</variable>
  <valuemap type="QVariantMap">
   <value type="bool" key="EditorConfiguration.AutoIndent">true</value>
   <value type="bool" key="EditorConfiguration.AutoSpacesForTabs">false</value>
   <value type="bool" key="EditorConfiguration.CamelCaseNavigation">true</value>
   <valuemap type="QVariantMap" key="EditorConfiguration.CodeStyle.0">
    <value type="QString" key="language">Cpp</value>
    <valuemap type="QVariantMap" key="value">
     <value type="QByteArray" key="CurrentPreferences">CppGlobal</value>
    </valuemap>
   </valuemap>
   <valuemap type="QVariantMap" key="EditorConfiguration.CodeStyle.1">
    <value type="QString" key="language">QmlJS</value>
    <valuemap type="QVariantMap" key="value">
     <value type="QByteArray" key="CurrentPreferences">QmlJSGlobal</value>
    </valuemap>
   </valuemap>
   <value type="int" key="EditorConfiguration.CodeStyle.Count">2</value>
   <value type="QByteArray" key="EditorConfiguration.Codec">UTF-8</value>
   <value type="bool" key="EditorConfiguration.ConstrainTooltips">false</value>
   <value type="int" key="EditorConfiguration.IndentSize">4</value>
   <value type="bool" key="EditorConfiguration.KeyboardTooltips">false</value>
   <value type="int" key="EditorConfiguration.MarginColumn">80</value>
   <value type="bool" key="EditorConfiguration.MouseHiding">true</value>
   <value type="bool" key="EditorConfiguration.MouseNavigation">true</value>
   <value type="int" key="EditorConfiguration.PaddingMode">1</value>
   <value type="bool" key="EditorConfiguration.PreferSingleLineComments">false</value>
   <value type="bool" key="EditorConfiguration.ScrollWheelZooming">true</value>
   <value type="bool" key="EditorConfiguration.ShowMargin">false</value>
   <value type="int" key="EditorConfiguration.SmartBackspaceBehavior">0</value>
   <value type="bool" key="EditorConfiguration.SmartSelectionChanging">true</value>
   <value type="bool" key="EditorConfiguration.SpacesForTabs">true</value>
   <value type="int" key="EditorConfiguration.TabKeyBehavior">0</value>
   <value type="int" key="EditorConfiguration.TabSize">8</value>
   <value type="bool" key="EditorConfiguration.UseGlobal">true</value>
   <value type="bool" key="EditorConfiguration.UseIndenter">false</value>
   <value type="int" key="EditorConfiguration.Utf8BomBehavior">1</value>
   <value type="bool" key="EditorConfiguration.addFinalNewLine">true</value>
   <value type="bool" key="EditorConfiguration.cleanIndentation">true</value>
   <value type="bool" key="EditorConfiguration.cleanWhitespace">true</value>
   <value type="QString" key="EditorConfiguration.ignoreFileTypes">*.md, *.MD, Makefile</value>
   <value type="bool" key="EditorConfiguration.inEntireDocument">false</value>
   <value type="bool" key="EditorConfiguration.skipTrailingWhitespace">true</value>
  </valuemap>
 </data>
 <data>
  <variable>ProjectExplorer.Project.PluginSettings</variable>
  <valuemap type="QVariantMap">
   <valuemap type="QVariantMap" key="AutoTest.ActiveFrameworks">
    <value type="bool" key="AutoTest.Framework.Boost">true</value>
    <value type="bool" key="AutoTest.Framework.CTest">false</value>
    <value type="bool" key="AutoTest.Framework.Catch">true</value>
    <value type="bool" key="AutoTest.Framework.GTest">true</value>
    <value type="bool" key="AutoTest.Framework.QtQuickTest">true</value>
    <value type="bool" key="AutoTest.Framework.QtTest">true</value>
   </valuemap>
   <valuemap type="QVariantMap" key="AutoTest.CheckStates">
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/AttributeMap-tests.cpp:AddAttribute">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/AttributeMap-tests.cpp:Clear">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/AttributeMap-tests.cpp:CopyAssigned">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/AttributeMap-tests.cpp:CopyConstructed">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/AttributeMap-tests.cpp:DefaultConstructed">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/AttributeMap-tests.cpp:InitialiseAttributes">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/AttributeMap-tests.cpp:ModelViewAttributeMapTest">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/AttributeMap-tests.cpp:MoveAssigned">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/AttributeMap-tests.cpp:MoveConstructed">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/AttributeMap-tests.cpp:Remove">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/AttributeMap-tests.cpp:SetAttribute">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/TreeData-tests.cpp:AddAttribute">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/TreeData-tests.cpp:AddChild">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/TreeData-tests.cpp:Constructed">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/TreeData-tests.cpp:CopyAssigned">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/TreeData-tests.cpp:CopyConstructed">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/TreeData-tests.cpp:ModelViewTreeDataTest">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/TreeData-tests.cpp:MoveAssigned">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/TreeData-tests.cpp:MoveConstructed">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/TreeData-tests.cpp:RemoveAttribute">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/TreeData-tests.cpp:SetAttribute">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/TreeData-tests.cpp:SetContent">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/TreeData-tests.cpp:SetName">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/compounditem.test.cpp:CompoundItemTest">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/compounditem.test.cpp:addBoolProperty">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/compounditem.test.cpp:addCharProperty">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/compounditem.test.cpp:addDoubleProperty">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/compounditem.test.cpp:addIntProperty">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/compounditem.test.cpp:addStringProperty">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/compounditem.test.cpp:children">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/compounditem.test.cpp:displayNameIndexAddition">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/compounditem.test.cpp:initialState">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/compounditem.test.cpp:itemAccess">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/compounditem.test.cpp:itemVectorAccess">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/compounditem.test.cpp:setBoolProperty">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/compounditem.test.cpp:setCharProperty">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/compounditem.test.cpp:setDoubleProperty">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/compounditem.test.cpp:setIntProperty">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/compounditem.test.cpp:setStringProperty">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/containerutils.test.cpp:ContainerUtilsTest">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/containerutils.test.cpp:Contains">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/containerutils.test.cpp:IndexOfItem">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/containerutils.test.cpp:UniqueWithOrder">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/containerutils.test.cpp:isUniquePtr">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/itemcatalogue.test.cpp:ItemCatalogueTest">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/itemcatalogue.test.cpp:addItem">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/itemcatalogue.test.cpp:addLabeledItem">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/itemcatalogue.test.cpp:assignmentOperator">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/itemcatalogue.test.cpp:contains">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/itemcatalogue.test.cpp:copyConstructor">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/itemcatalogue.test.cpp:initialState">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/itemcatalogue.test.cpp:merge">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/itemmanager.test.cpp:ItemManagerTest">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/itemmanager.test.cpp:initialState">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/itempool.test.cpp:ItemPoolTest">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/itempool.test.cpp:customKey">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/itempool.test.cpp:deregisterItem">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/itempool.test.cpp:initialState">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/itempool.test.cpp:registerItem">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/itemutils.test.cpp:HasTag">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/itemutils.test.cpp:ItemUtilsTest">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/itemutils.test.cpp:iterateIfItem">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/itemutils.test.cpp:iterateItem">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/sessionitem.test.cpp:SessionItemTest">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/sessionitem.test.cpp:appearance">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/sessionitem.test.cpp:defaultTag">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/sessionitem.test.cpp:displayName">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/sessionitem.test.cpp:hasData">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/sessionitem.test.cpp:initialState">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/sessionitem.test.cpp:insertChildren">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/sessionitem.test.cpp:insertItem">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/sessionitem.test.cpp:insertItemTemplated">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/sessionitem.test.cpp:itemsInTag">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/sessionitem.test.cpp:modelType">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/sessionitem.test.cpp:registerDefaultTag">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/sessionitem.test.cpp:registerItem">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/sessionitem.test.cpp:registerTag">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/sessionitem.test.cpp:setBoolData">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/sessionitem.test.cpp:setData">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/sessionitem.test.cpp:setDataAndImplicitConversion">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/sessionitem.test.cpp:setDoubleData">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/sessionitem.test.cpp:setIntData">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/sessionitem.test.cpp:setStringData">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/sessionitem.test.cpp:singleTagAndItems">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/sessionitem.test.cpp:tag">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/sessionitem.test.cpp:tagModelTypes">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/sessionitem.test.cpp:tagRow">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/sessionitem.test.cpp:tagRowOfItem">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/sessionitem.test.cpp:tagWithLimits">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/sessionitem.test.cpp:takeItem">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/sessionitem.test.cpp:tooltip">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/sessionitem.test.cpp:twoTagsAndItems">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/sessionitem.test.cpp:variantMismatch">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/sessionitemcontainer.test.cpp:CanInsertItem">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/sessionitemcontainer.test.cpp:CanInsertItemForPropertyTag">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/sessionitemcontainer.test.cpp:CanInsertItemForUniversalTag">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/sessionitemcontainer.test.cpp:CanTakeItem">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/sessionitemcontainer.test.cpp:IndexOfItem">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/sessionitemcontainer.test.cpp:InitialState">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/sessionitemcontainer.test.cpp:InsertItem">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/sessionitemcontainer.test.cpp:InsertItemModelType">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/sessionitemcontainer.test.cpp:InsertItemPropertyType">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/sessionitemcontainer.test.cpp:ItemAt">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/sessionitemcontainer.test.cpp:SessionItemContainerTest">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/sessionitemcontainer.test.cpp:TakeItem">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/sessionitemcontainer.test.cpp:TakeItemPropertyType">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/sessionitemcontainer.test.cpp:canInsertItem">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/sessionitemcontainer.test.cpp:canInsertItemForPropertyTag">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/sessionitemcontainer.test.cpp:canInsertItemForUniversalTag">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/sessionitemcontainer.test.cpp:canTakeItem">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/sessionitemcontainer.test.cpp:indexOfItem">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/sessionitemcontainer.test.cpp:initialState">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/sessionitemcontainer.test.cpp:insertItem">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/sessionitemcontainer.test.cpp:insertItemModelType">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/sessionitemcontainer.test.cpp:insertItemPropertyType">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/sessionitemcontainer.test.cpp:itemAt">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/sessionitemcontainer.test.cpp:takeItem">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/sessionitemcontainer.test.cpp:takeItemPropertyType">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/sessionitemdata.test.cpp:SessionItemDataTest">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/sessionitemdata.test.cpp:changingRole">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/sessionitemdata.test.cpp:differentRoles">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/sessionitemdata.test.cpp:hasRole">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/sessionitemdata.test.cpp:initialState">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/sessionitemdata.test.cpp:rangeLoop">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/sessionitemdata.test.cpp:setDataDouble">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/sessionmodel.test.cpp:SessionModelTest">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/sessionmodel.test.cpp:clearModel">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/sessionmodel.test.cpp:clearRebuildModel">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/sessionmodel.test.cpp:findItem">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/sessionmodel.test.cpp:findItemInAlienModel">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/sessionmodel.test.cpp:initialState">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/sessionmodel.test.cpp:insertItem">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/sessionmodel.test.cpp:insertNewItem">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/sessionmodel.test.cpp:insertNewItemWithTag">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/sessionmodel.test.cpp:registerItem">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/sessionmodel.test.cpp:removeItem">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/sessionmodel.test.cpp:removeNonExistingItem">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/sessionmodel.test.cpp:setData">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/sessionmodel.test.cpp:takeRowFromRootItem">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/sessionmodel.test.cpp:topItem">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/sessionmodel.test.cpp:topItems">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/stringutils.test.cpp:DoubleToString">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/stringutils.test.cpp:FromBool">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/stringutils.test.cpp:ParseCommaSeparatedDoubles">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/stringutils.test.cpp:ParseSpaceSeparatedDoubles">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/stringutils.test.cpp:ScientificDoubleToString">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/stringutils.test.cpp:SplitString">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/stringutils.test.cpp:StringToBool">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/stringutils.test.cpp:StringToDouble">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/stringutils.test.cpp:StringToInteger">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/stringutils.test.cpp:StringUtilsTest">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/stringutils.test.cpp:ToComaSeparatedString">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/stringutils.test.cpp:TrimWhiteSpace">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/taggeditems.test.cpp:CanInsertItem">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/taggeditems.test.cpp:CanInsertItemForUniversalTag">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/taggeditems.test.cpp:GetItem">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/taggeditems.test.cpp:InitialState">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/taggeditems.test.cpp:InsertItem">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/taggeditems.test.cpp:IsSinglePropertyTag">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/taggeditems.test.cpp:RegisterTag">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/taggeditems.test.cpp:TagRowOfItem">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/taggeditems.test.cpp:TaggedItemsTest">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/taggeditems.test.cpp:TakeItem">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/taggeditems.test.cpp:canInsertItem">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/taggeditems.test.cpp:canInsertItemForUniversalTag">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/taggeditems.test.cpp:getItem">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/taggeditems.test.cpp:initialState">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/taggeditems.test.cpp:insertItem">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/taggeditems.test.cpp:isSinglePropertyTag">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/taggeditems.test.cpp:registerTag">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/taggeditems.test.cpp:tagRowOfItem">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/taggeditems.test.cpp:takeItem">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/tagindex.test.cpp:TagIndexTest">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/tagindex.test.cpp:assignmentOperator">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/tagindex.test.cpp:braceInitializer">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/tagindex.test.cpp:equalityOperators">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/tagindex.test.cpp:factoryMethods">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/tagindex.test.cpp:implicitConvertion">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/tagindex.test.cpp:initialState">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/tagindex.test.cpp:next">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/tagindex.test.cpp:prev">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/taginfo.test.cpp:TagInfoTest">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/taginfo.test.cpp:defaultTag">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/taginfo.test.cpp:equalityOperator">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/taginfo.test.cpp:initialState">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/taginfo.test.cpp:propertyTag">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/threadsafestack.test.cpp:ThreadSafeStackTest">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/threadsafestack.test.cpp:concurentPushAndPop">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/threadsafestack.test.cpp:concurentStopWaiting">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/threadsafestack.test.cpp:initialState">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/threadsafestack.test.cpp:pushAndPop">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/threadsafestack.test.cpp:updateTop">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/treedataitemconverter.test.cpp:PropertyItemToTreeData">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/treedataitemconverter.test.cpp:TreeDataItemConverterTest">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/treedatataginfoconverter.test.cpp:ConvertUniversalTag">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/treedatataginfoconverter.test.cpp:ConvertUniversalTagWithModelTypes">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/treedatataginfoconverter.test.cpp:TreeDataTagInfoConverterTest">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/treedatavariantconverter.test.cpp:BoolDataRole">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/treedatavariantconverter.test.cpp:DoubleDataRole">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/treedatavariantconverter.test.cpp:IntDataRole">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/treedatavariantconverter.test.cpp:StringDataRole">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/treedatavariantconverter.test.cpp:TreeDataVariantConverterTest">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/treedatavariantconverter.test.cpp:UndefinedDataRole">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/treedatavariantconverter.test.cpp:VectorOfDoubleRole">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/variant.test.cpp:AreCompatible">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/variant.test.cpp:DataRoleComparison">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/variant.test.cpp:IsValid">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/variant.test.cpp:TypeName">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/variant.test.cpp:VariantTest">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/vectoritem.test.cpp:VectorItemTest">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/vectoritem.test.cpp:initialState">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/vectoritem.test.cpp:initialStateFromModel">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/xmlparseutils.test.cpp:ParseXMLDataString_EmptyString">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/xmlparseutils.test.cpp:ParseXMLDataString_TagInfo">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/xmlparseutils.test.cpp:ParseXMLElementString_DataRole">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/xmlparseutils.test.cpp:ParseXMLElementString_TagInfo">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/xmlparseutils.test.cpp:XMLParseUtilsTest">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/xmlwriteutils.test.cpp:WriteElement">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/xmlwriteutils.test.cpp:WriteElementAttributeAndContent">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/xmlwriteutils.test.cpp:WriteElementContent">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/xmlwriteutils.test.cpp:WriteElementWithAttribute">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/xmlwriteutils.test.cpp:WriteElementWithChildren">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/xmlwriteutils.test.cpp:WriteElementWithTwoAttributes">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/xmlwriteutils.test.cpp:WriteItemData">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_model/xmlwriteutils.test.cpp:XMLWriteUtilsTest">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_viewmodel/presentationitem.test.cpp:PresentationItemTest">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_viewmodel/presentationitem.test.cpp:initialState">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_viewmodel/presentationitem.test.cpp:onData">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_viewmodel/viewitem.test.cpp:ViewItemTest">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_viewmodel/viewitem.test.cpp:appendRow">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_viewmodel/viewitem.test.cpp:appendTwoRows">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_viewmodel/viewitem.test.cpp:children">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_viewmodel/viewitem.test.cpp:clear">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_viewmodel/viewitem.test.cpp:flags">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_viewmodel/viewitem.test.cpp:initialState">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_viewmodel/viewitem.test.cpp:insertRowsThenRemove">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_viewmodel/viewitem.test.cpp:removeRow">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_viewmodel/viewitemdata.test.cpp:InitialState">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_viewmodel/viewitemdata.test.cpp:ViewItemDataTest">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_viewmodel/viewitemdata.test.cpp:setAppearance">Checked</value>
    <value type="Qt::CheckState" key="1@/home/pospelov/development/iter/cpp-mvvm/tests/testmvvm_viewmodel/viewitemdata.test.cpp:setData">Checked</value>
   </valuemap>
   <value type="int" key="AutoTest.RunAfterBuild">0</value>
   <value type="bool" key="AutoTest.UseGlobal">true</value>
   <valuelist type="QVariantList" key="ClangCodeModel.CustomCommandLineKey"/>
   <value type="bool" key="ClangCodeModel.UseGlobalConfig">true</value>
   <value type="QString" key="ClangCodeModel.WarningConfigId">Builtin.BuildSystem</value>
   <valuemap type="QVariantMap" key="ClangTools">
    <value type="bool" key="ClangTools.AnalyzeOpenFiles">true</value>
    <value type="bool" key="ClangTools.BuildBeforeAnalysis">true</value>
    <value type="QString" key="ClangTools.DiagnosticConfig">Builtin.DefaultTidyAndClazy</value>
    <value type="int" key="ClangTools.ParallelJobs">6</value>
    <valuelist type="QVariantList" key="ClangTools.SelectedDirs"/>
    <valuelist type="QVariantList" key="ClangTools.SelectedFiles"/>
    <valuelist type="QVariantList" key="ClangTools.SuppressedDiagnostics"/>
    <value type="bool" key="ClangTools.UseGlobalSettings">true</value>
   </valuemap>
  </valuemap>
 </data>
 <data>
  <variable>ProjectExplorer.Project.Target.0</variable>
  <valuemap type="QVariantMap">
   <value type="QString" key="DeviceType">Desktop</value>
   <value type="QString" key="ProjectExplorer.ProjectConfiguration.DefaultDisplayName">Desktop</value>
   <value type="QString" key="ProjectExplorer.ProjectConfiguration.DisplayName">Desktop</value>
   <value type="QString" key="ProjectExplorer.ProjectConfiguration.Id">{eb1dec4d-19e0-4b5a-9e74-52f1168be670}</value>
   <value type="int" key="ProjectExplorer.Target.ActiveBuildConfiguration">0</value>
   <value type="int" key="ProjectExplorer.Target.ActiveDeployConfiguration">0</value>
   <value type="int" key="ProjectExplorer.Target.ActiveRunConfiguration">0</value>
   <valuemap type="QVariantMap" key="ProjectExplorer.Target.BuildConfiguration.0">
    <value type="QString" key="CMake.Build.Type">Debug</value>
    <value type="QString" key="CMake.Initial.Parameters">-GUnix Makefiles
-DCMAKE_BUILD_TYPE:STRING=Debug
-DCMAKE_PROJECT_INCLUDE_BEFORE:PATH=%{IDE:ResourcePath}/package-manager/auto-setup.cmake
-DQT_QMAKE_EXECUTABLE:STRING=%{Qt:qmakeExecutable}
-DCMAKE_PREFIX_PATH:STRING=%{Qt:QT_INSTALL_PREFIX}
-DCMAKE_C_COMPILER:STRING=%{Compiler:Executable:C}
-DCMAKE_CXX_COMPILER:STRING=%{Compiler:Executable:Cxx}</value>
    <value type="QString" key="ProjectExplorer.BuildConfiguration.BuildDirectory">/home/pospelov/development/iter/cpp-mvvm/build-debug</value>
    <valuemap type="QVariantMap" key="ProjectExplorer.BuildConfiguration.BuildStepList.0">
     <valuemap type="QVariantMap" key="ProjectExplorer.BuildStepList.Step.0">
      <valuelist type="QVariantList" key="CMakeProjectManager.MakeStep.BuildTargets">
       <value type="QString">all</value>
      </valuelist>
      <value type="QString" key="CMakeProjectManager.MakeStep.CMakeArguments">-j6</value>
      <value type="bool" key="ProjectExplorer.BuildStep.Enabled">true</value>
      <value type="QString" key="ProjectExplorer.ProjectConfiguration.DisplayName">Build</value>
      <value type="QString" key="ProjectExplorer.ProjectConfiguration.Id">CMakeProjectManager.MakeStep</value>
     </valuemap>
     <valuemap type="QVariantMap" key="ProjectExplorer.BuildStepList.Step.1">
      <value type="bool" key="ProjectExplorer.BuildStep.Enabled">true</value>
      <value type="QString" key="ProjectExplorer.ProcessStep.Arguments">-j4</value>
      <value type="QString" key="ProjectExplorer.ProcessStep.Command">ctest</value>
      <value type="QString" key="ProjectExplorer.ProcessStep.WorkingDirectory">%{buildDir}</value>
      <value type="QString" key="ProjectExplorer.ProjectConfiguration.Id">ProjectExplorer.ProcessStep</value>
     </valuemap>
     <value type="int" key="ProjectExplorer.BuildStepList.StepsCount">2</value>
     <value type="QString" key="ProjectExplorer.ProjectConfiguration.DefaultDisplayName">Build</value>
     <value type="QString" key="ProjectExplorer.ProjectConfiguration.DisplayName">Build</value>
     <value type="QString" key="ProjectExplorer.ProjectConfiguration.Id">ProjectExplorer.BuildSteps.Build</value>
    </valuemap>
    <valuemap type="QVariantMap" key="ProjectExplorer.BuildConfiguration.BuildStepList.1">
     <valuemap type="QVariantMap" key="ProjectExplorer.BuildStepList.Step.0">
      <valuelist type="QVariantList" key="CMakeProjectManager.MakeStep.BuildTargets">
       <value type="QString">clean</value>
      </valuelist>
      <value type="bool" key="ProjectExplorer.BuildStep.Enabled">true</value>
      <value type="QString" key="ProjectExplorer.ProjectConfiguration.DisplayName">Build</value>
      <value type="QString" key="ProjectExplorer.ProjectConfiguration.Id">CMakeProjectManager.MakeStep</value>
     </valuemap>
     <value type="int" key="ProjectExplorer.BuildStepList.StepsCount">1</value>
     <value type="QString" key="ProjectExplorer.ProjectConfiguration.DefaultDisplayName">Clean</value>
     <value type="QString" key="ProjectExplorer.ProjectConfiguration.DisplayName">Clean</value>
     <value type="QString" key="ProjectExplorer.ProjectConfiguration.Id">ProjectExplorer.BuildSteps.Clean</value>
    </valuemap>
    <value type="int" key="ProjectExplorer.BuildConfiguration.BuildStepListCount">2</value>
    <value type="bool" key="ProjectExplorer.BuildConfiguration.ClearSystemEnvironment">false</value>
    <valuelist type="QVariantList" key="ProjectExplorer.BuildConfiguration.CustomParsers"/>
    <valuelist type="QVariantList" key="ProjectExplorer.BuildConfiguration.UserEnvironmentChanges"/>
    <value type="QString" key="ProjectExplorer.ProjectConfiguration.DisplayName">Debug</value>
    <value type="QString" key="ProjectExplorer.ProjectConfiguration.Id">CMakeProjectManager.CMakeBuildConfiguration</value>
   </valuemap>
   <value type="int" key="ProjectExplorer.Target.BuildConfigurationCount">1</value>
   <valuemap type="QVariantMap" key="ProjectExplorer.Target.DeployConfiguration.0">
    <valuemap type="QVariantMap" key="ProjectExplorer.BuildConfiguration.BuildStepList.0">
     <value type="int" key="ProjectExplorer.BuildStepList.StepsCount">0</value>
     <value type="QString" key="ProjectExplorer.ProjectConfiguration.DefaultDisplayName">Deploy</value>
     <value type="QString" key="ProjectExplorer.ProjectConfiguration.DisplayName">Deploy</value>
     <value type="QString" key="ProjectExplorer.ProjectConfiguration.Id">ProjectExplorer.BuildSteps.Deploy</value>
    </valuemap>
    <value type="int" key="ProjectExplorer.BuildConfiguration.BuildStepListCount">1</value>
    <valuemap type="QVariantMap" key="ProjectExplorer.DeployConfiguration.CustomData"/>
    <value type="bool" key="ProjectExplorer.DeployConfiguration.CustomDataEnabled">false</value>
    <value type="QString" key="ProjectExplorer.ProjectConfiguration.Id">ProjectExplorer.DefaultDeployConfiguration</value>
   </valuemap>
   <value type="int" key="ProjectExplorer.Target.DeployConfigurationCount">1</value>
   <valuemap type="QVariantMap" key="ProjectExplorer.Target.RunConfiguration.0">
    <value type="QString" key="Analyzer.Perf.CallgraphMode">dwarf</value>
    <valuelist type="QVariantList" key="Analyzer.Perf.Events">
     <value type="QString">cpu-cycles</value>
    </valuelist>
    <valuelist type="QVariantList" key="Analyzer.Perf.ExtraArguments"/>
    <value type="int" key="Analyzer.Perf.Frequency">250</value>
    <valuelist type="QVariantList" key="Analyzer.Perf.RecordArguments">
     <value type="QString">-e</value>
     <value type="QString">cpu-cycles</value>
     <value type="QString">--call-graph</value>
     <value type="QString">dwarf,4096</value>
     <value type="QString">-F</value>
     <value type="QString">250</value>
    </valuelist>
    <value type="QString" key="Analyzer.Perf.SampleMode">-F</value>
    <value type="bool" key="Analyzer.Perf.Settings.UseGlobalSettings">true</value>
    <value type="int" key="Analyzer.Perf.StackSize">4096</value>
    <value type="bool" key="Analyzer.QmlProfiler.AggregateTraces">false</value>
    <value type="bool" key="Analyzer.QmlProfiler.FlushEnabled">false</value>
    <value type="uint" key="Analyzer.QmlProfiler.FlushInterval">1000</value>
    <value type="QString" key="Analyzer.QmlProfiler.LastTraceFile"></value>
    <value type="bool" key="Analyzer.QmlProfiler.Settings.UseGlobalSettings">true</value>
    <valuelist type="QVariantList" key="Analyzer.Valgrind.AddedSuppressionFiles"/>
    <value type="QString" key="Analyzer.Valgrind.Callgrind.Arguments"></value>
    <value type="bool" key="Analyzer.Valgrind.Callgrind.CollectBusEvents">false</value>
    <value type="bool" key="Analyzer.Valgrind.Callgrind.CollectSystime">false</value>
    <value type="bool" key="Analyzer.Valgrind.Callgrind.EnableBranchSim">false</value>
    <value type="bool" key="Analyzer.Valgrind.Callgrind.EnableCacheSim">false</value>
    <value type="bool" key="Analyzer.Valgrind.Callgrind.EnableEventToolTips">true</value>
    <value type="double" key="Analyzer.Valgrind.Callgrind.MinimumCostRatio">0.01</value>
    <value type="double" key="Analyzer.Valgrind.Callgrind.VisualisationMinimumCostRatio">10</value>
    <value type="bool" key="Analyzer.Valgrind.FilterExternalIssues">true</value>
    <value type="QString" key="Analyzer.Valgrind.KCachegrindExecutable">kcachegrind</value>
    <value type="int" key="Analyzer.Valgrind.LeakCheckOnFinish">1</value>
    <value type="QString" key="Analyzer.Valgrind.Memcheck.Arguments"></value>
    <value type="int" key="Analyzer.Valgrind.NumCallers">25</value>
    <valuelist type="QVariantList" key="Analyzer.Valgrind.RemovedSuppressionFiles"/>
    <value type="int" key="Analyzer.Valgrind.SelfModifyingCodeDetection">1</value>
    <value type="bool" key="Analyzer.Valgrind.Settings.UseGlobalSettings">true</value>
    <value type="bool" key="Analyzer.Valgrind.ShowReachable">false</value>
    <value type="bool" key="Analyzer.Valgrind.TrackOrigins">true</value>
    <value type="QString" key="Analyzer.Valgrind.ValgrindArguments"></value>
    <value type="QString" key="Analyzer.Valgrind.ValgrindExecutable">valgrind</value>
    <valuelist type="QVariantList" key="Analyzer.Valgrind.VisibleErrorKinds">
     <value type="int">0</value>
     <value type="int">1</value>
     <value type="int">2</value>
     <value type="int">3</value>
     <value type="int">4</value>
     <value type="int">5</value>
     <value type="int">6</value>
     <value type="int">7</value>
     <value type="int">8</value>
     <value type="int">9</value>
     <value type="int">10</value>
     <value type="int">11</value>
     <value type="int">12</value>
     <value type="int">13</value>
     <value type="int">14</value>
    </valuelist>
    <valuelist type="QVariantList" key="CustomOutputParsers"/>
    <value type="int" key="PE.EnvironmentAspect.Base">2</value>
    <valuelist type="QVariantList" key="PE.EnvironmentAspect.Changes"/>
    <value type="QString" key="ProjectExplorer.ProjectConfiguration.DisplayName">testmvvm_model</value>
    <value type="QString" key="ProjectExplorer.ProjectConfiguration.Id">CMakeProjectManager.CMakeRunConfiguration.testmvvm_model</value>
    <value type="QString" key="ProjectExplorer.RunConfiguration.BuildKey">testmvvm_model</value>
    <value type="bool" key="RunConfiguration.UseCppDebugger">false</value>
    <value type="bool" key="RunConfiguration.UseCppDebuggerAuto">true</value>
    <value type="bool" key="RunConfiguration.UseLibrarySearchPath">true</value>
    <value type="bool" key="RunConfiguration.UseQmlDebugger">false</value>
    <value type="bool" key="RunConfiguration.UseQmlDebuggerAuto">true</value>
    <value type="QString" key="RunConfiguration.WorkingDirectory.default">/home/pospelov/development/iter/cpp-mvvm/build-debug/bin</value>
   </valuemap>
   <valuemap type="QVariantMap" key="ProjectExplorer.Target.RunConfiguration.1">
    <value type="QString" key="Analyzer.Perf.CallgraphMode">dwarf</value>
    <valuelist type="QVariantList" key="Analyzer.Perf.Events">
     <value type="QString">cpu-cycles</value>
    </valuelist>
    <valuelist type="QVariantList" key="Analyzer.Perf.ExtraArguments"/>
    <value type="int" key="Analyzer.Perf.Frequency">250</value>
    <valuelist type="QVariantList" key="Analyzer.Perf.RecordArguments">
     <value type="QString">-e</value>
     <value type="QString">cpu-cycles</value>
     <value type="QString">--call-graph</value>
     <value type="QString">dwarf,4096</value>
     <value type="QString">-F</value>
     <value type="QString">250</value>
    </valuelist>
    <value type="QString" key="Analyzer.Perf.SampleMode">-F</value>
    <value type="bool" key="Analyzer.Perf.Settings.UseGlobalSettings">true</value>
    <value type="int" key="Analyzer.Perf.StackSize">4096</value>
    <value type="bool" key="Analyzer.QmlProfiler.AggregateTraces">false</value>
    <value type="bool" key="Analyzer.QmlProfiler.FlushEnabled">false</value>
    <value type="uint" key="Analyzer.QmlProfiler.FlushInterval">1000</value>
    <value type="QString" key="Analyzer.QmlProfiler.LastTraceFile"></value>
    <value type="bool" key="Analyzer.QmlProfiler.Settings.UseGlobalSettings">true</value>
    <valuelist type="QVariantList" key="Analyzer.Valgrind.AddedSuppressionFiles"/>
    <value type="QString" key="Analyzer.Valgrind.Callgrind.Arguments"></value>
    <value type="bool" key="Analyzer.Valgrind.Callgrind.CollectBusEvents">false</value>
    <value type="bool" key="Analyzer.Valgrind.Callgrind.CollectSystime">false</value>
    <value type="bool" key="Analyzer.Valgrind.Callgrind.EnableBranchSim">false</value>
    <value type="bool" key="Analyzer.Valgrind.Callgrind.EnableCacheSim">false</value>
    <value type="bool" key="Analyzer.Valgrind.Callgrind.EnableEventToolTips">true</value>
    <value type="double" key="Analyzer.Valgrind.Callgrind.MinimumCostRatio">0.01</value>
    <value type="double" key="Analyzer.Valgrind.Callgrind.VisualisationMinimumCostRatio">10</value>
    <value type="bool" key="Analyzer.Valgrind.FilterExternalIssues">true</value>
    <value type="QString" key="Analyzer.Valgrind.KCachegrindExecutable">kcachegrind</value>
    <value type="int" key="Analyzer.Valgrind.LeakCheckOnFinish">1</value>
    <value type="QString" key="Analyzer.Valgrind.Memcheck.Arguments"></value>
    <value type="int" key="Analyzer.Valgrind.NumCallers">25</value>
    <valuelist type="QVariantList" key="Analyzer.Valgrind.RemovedSuppressionFiles"/>
    <value type="int" key="Analyzer.Valgrind.SelfModifyingCodeDetection">1</value>
    <value type="bool" key="Analyzer.Valgrind.Settings.UseGlobalSettings">true</value>
    <value type="bool" key="Analyzer.Valgrind.ShowReachable">false</value>
    <value type="bool" key="Analyzer.Valgrind.TrackOrigins">true</value>
    <value type="QString" key="Analyzer.Valgrind.ValgrindArguments"></value>
    <value type="QString" key="Analyzer.Valgrind.ValgrindExecutable">valgrind</value>
    <valuelist type="QVariantList" key="Analyzer.Valgrind.VisibleErrorKinds">
     <value type="int">0</value>
     <value type="int">1</value>
     <value type="int">2</value>
     <value type="int">3</value>
     <value type="int">4</value>
     <value type="int">5</value>
     <value type="int">6</value>
     <value type="int">7</value>
     <value type="int">8</value>
     <value type="int">9</value>
     <value type="int">10</value>
     <value type="int">11</value>
     <value type="int">12</value>
     <value type="int">13</value>
     <value type="int">14</value>
    </valuelist>
    <valuelist type="QVariantList" key="CustomOutputParsers"/>
    <value type="int" key="PE.EnvironmentAspect.Base">2</value>
    <valuelist type="QVariantList" key="PE.EnvironmentAspect.Changes"/>
    <value type="QString" key="ProjectExplorer.ProjectConfiguration.DisplayName">testmvvm_viewmodel</value>
    <value type="QString" key="ProjectExplorer.ProjectConfiguration.Id">CMakeProjectManager.CMakeRunConfiguration.testmvvm_viewmodel</value>
    <value type="QString" key="ProjectExplorer.RunConfiguration.BuildKey">testmvvm_viewmodel</value>
    <value type="bool" key="RunConfiguration.UseCppDebugger">false</value>
    <value type="bool" key="RunConfiguration.UseCppDebuggerAuto">true</value>
    <value type="bool" key="RunConfiguration.UseLibrarySearchPath">true</value>
    <value type="bool" key="RunConfiguration.UseQmlDebugger">false</value>
    <value type="bool" key="RunConfiguration.UseQmlDebuggerAuto">true</value>
    <value type="QString" key="RunConfiguration.WorkingDirectory.default">/home/pospelov/development/iter/cpp-mvvm/build-debug/bin</value>
   </valuemap>
   <value type="int" key="ProjectExplorer.Target.RunConfigurationCount">2</value>
  </valuemap>
 </data>
 <data>
  <variable>ProjectExplorer.Project.TargetCount</variable>
  <value type="int">1</value>
 </data>
 <data>
  <variable>ProjectExplorer.Project.Updater.FileVersion</variable>
  <value type="int">22</value>
 </data>
 <data>
  <variable>Version</variable>
  <value type="int">22</value>
 </data>
</qtcreator>
