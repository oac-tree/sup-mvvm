Changes for 1.8.0:

- Implement helper function to retrieve compile time index of variant
- Fix compilation warnings for Qt6.9
- Implement builder for ItemViewComponentProvider
- Implement StringCompleterEditor and StringCompleterComboEditor for cells of Qt trees and tables
- Implement possibility to configure ViewmodelDelegate with external cell editor factory
- Move cell editors in sup-mvvm library
- Provide possibility to filter out children during XML string generation
- Make BooleanEditor and ComboEditor in tree cells closing after editing finished
- Fix Qt warnings in celleditors example
- Provide tooltips for ComboBox property editors.

Changes for 1.7.0:

- COA Release v3.0, CODAC Core System Release 7.3, March 2025
- Fix bug with the serialization of large int64
- Fix bug with two digits only while editing integers and floats in filtered trees
- Fix MacOs build
- Refactor static model type registration
- Provide experimental WebAssembly build
- Enable user examples build by default
- Borrow external library sup-xml
- Adjust integer types to match sup-dto types
- Switch from int to std::size_t in SessionItem related containers

Changes for 1.6.0:

- COA Release v2.3, January 2025
- Round of Sonar/Misra/Parasoft code quality fixes
- Switch to Qt6 by default
- Simplify item clone and deep copy machinery
- Implement user example demonstrating new project save machinery
- Implement user example demonstrating undo/redo
- First implementation of Waveforms with QChart plotting machinery
- Implement user interaction machinery for project save/load
- Refactor ProjectManager machinery with model recreation feature
- Switch SessionItem data underlying containainer to map
- Enable/disable property machinery for flat view
- Fix bug for label in flat view

Changes for 1.5.0:

- CODAC Core System Release 7.2.1
- Add macro capabilities to the model's API
- Provide limit for number of undo commands
- Implement macro command for undo/redo framework
- COA Release v2.2, August 2024
- New ItemViewComponentProvider with the possibility to install proxy models
- New machinery for time series plots via QtCharts
- Restructure folders to separate views and models
- New Project machinery, support for file-based and directory-based projects
- Refactor ItemListener for connections based on concrete event types
- New AbstractRowStrategy with safety checks for a number of columns

Changes for 1.4.0:

- COA Release v2.1, March 2024
- Capitalize ViewItem API
- Implement char8 cell editor
- Implement consistent FindItemUp
- Use own exceptions everywhere
- Update documentation for base classes
- Remove ItemManager and implement global item catalogue
- Extract test utils into separate library
- Switch fluent interfaced to references

Changes for 1.3.0:

- Special TMCR bugfix Release, November 2023
- Fix to find system's qt5 on CODAC
- View model performance improvements for filtering of large trees
- Remove obsolete limits machinery

Changes for 1.2.0:

- COA Release v2.0, October 2023
- Refactoring of the machinery for scalar data property and limits to support editing of all
  sup-dto types
- Refactoring ViewModelController abstract interface
- New virtual parent ViewModelController

Changes for 1.1.0:

- COA Release v1.9, August 2023
- Do not set display name by default
- Prevent zero column count on empty models
- Refactor view model to allow the usage with different models
- Implement editor for long long integer
- Make consistent constantness of ViewModel getters
- Implement functions CanInsert and CanMove

Changes for 1.0.0:

- Introduced new event machinery
- New benchmarking tests
- Implemented new clone machinery
- Multiple minor changes in the API

Changes for 0.4.0:

- Base version for demo in November 2022
- Implemented thread-safe queue
- Implemented methods for 4K scaling
- Implemented FlatView to automatically generate grid of widgets
- Refactored ModelEventHandler machinery

Changes for 0.3.0:

- Base version for demo in August 2022
- Experimental event handler
- Concurrent plot example
- Appearance refactoring to provide highlight abilities
- Limits for int/double in cell editors


