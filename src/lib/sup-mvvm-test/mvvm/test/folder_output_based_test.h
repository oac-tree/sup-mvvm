/******************************************************************************
 *
 * Project       : Operational Applications UI Foundation
 *
 * Description   : The model-view-viewmodel library of generic UI components
 *
 * Author        : Gennady Pospelov (IO)
 *
 * Copyright (c) : 2010-2023 ITER Organization,
 *                 CS 90 046
 *                 13067 St. Paul-lez-Durance Cedex
 *                 France
 *
 * This file is part of ITER CODAC software.
 * For the terms and conditions of redistribution or use of this software
 * refer to the file ITER-LICENSE.TXT located in the top level directory
 * of the distribution package.
 *****************************************************************************/

#ifndef MVVM_TEST_FOLDER_OUTPUT_BASED_TEST_H_
#define MVVM_TEST_FOLDER_OUTPUT_BASED_TEST_H_

#include <gtest/gtest.h>

#include <string>

namespace mvvm::test
{

/**
 * @brief The FolderOutputBasedTest class is intended for unit tests that producing some output on
 * disk.
 *
 * @details Every test is configured to produce output in own folder, located in the build
 * directory.
 */
class FolderOutputBasedTest : public ::testing::Test
{
public:
  /**
   * @brief Main c-tor.
   * @param test_suite_output_dir The path to the place with test output as configured by CMake.
   * @param test_home_dirname The name of folder inside.
   *
   * @details The test will create content in test_suite_output_dir/test_home_dirname, which is
   * normally CMAKE_BINARY_DIR/test_output/test_home_dirname.
   */
  FolderOutputBasedTest(std::string test_suite_output_dir, std::string test_home_dirname);
  ~FolderOutputBasedTest() override;

  /**
   * @brief Returns full path to the test folder.
   */
  std::string GetTestHomeDirName() const;

  /**
   * @brief Returns test folder name.
   */
  std::string GetTestHomeDir() const;

  /**
   * @brief Returns full path to the file with given name located in test home directory.
   */
  std::string GetFilePath(const std::string& file_name) const;

  /**
   * @brief Creates an empty directory in main test folder and returns full path to the user.
   * Remove recursively previous one with the same name, if exist.
   */
  std::string CreateEmptyDir(const std::string& subdir) const;

private:
  std::string m_test_suite_output_dir;  //! The full path to the test folder as defined by CMAKE.
  std::string m_test_home_dirname;      //! The name of the folder for files generated by this test.
};

}  // namespace mvvm::test

#endif  // MVVM_TEST_FOLDER_OUTPUT_BASED_TEST_H_
