target_sources(${library_name} PRIVATE
  application_model.cpp
  application_model.h
  combo_property.cpp
  combo_property.h
  compound_item.cpp
  compound_item.h
  external_property.cpp
  external_property.h
  function_types.h
  i_item_factory.h
  i_model_composer.h
  i_session_model.h
  i_item_backup_strategy.h
  item_catalogue.h
  item_constants.h
  item_factory.cpp
  item_factory.h
  item_limits_helper.cpp
  item_limits_helper.h
  item_pool.cpp
  item_pool.h
  item_utils.cpp
  item_utils.h
  model_composer.cpp
  model_composer.h
  model_fwd.h
  model_utils.cpp
  model_utils.h
  mvvm_types.h
  notifying_model_composer.h
  path.cpp
  path.h
  property_item.cpp
  property_item.h
  session_item.cpp
  session_item.h
  session_item_container.cpp
  session_item_container.h
  session_item_data.cpp
  session_item_data.h
  session_model.cpp
  session_model.h
  tagged_items.cpp
  tagged_items.h
  tagindex.cpp
  tagindex.h
  taginfo.cpp
  taginfo.h
  validate_utils.cpp
  validate_utils.h
  )
