target_sources(${library_name} PRIVATE
  abstract_model_decorator.cpp
  abstract_model_decorator.h
  application_model.cpp
  application_model.h
  combo_property.cpp
  combo_property.h
  compound_item.cpp
  compound_item.h
  external_property.cpp
  external_property.h
  function_types.h
  item_catalogue.h
  item_factory.cpp
  item_factory.h
  item_manager.cpp
  item_manager.h
  item_pool.cpp
  item_pool.h
  item_utils.cpp
  item_utils.h
  model_decorator.h
  model_utils.cpp
  model_utils.h
  model_composer.cpp
  model_composer.h
  mvvm_types.h
  notifying_model_composer.h
  path.cpp
  path.h
  property_item.cpp
  property_item.h
  sessionitem.cpp
  sessionitem.h
  sessionitem_container.cpp
  sessionitem_container.h
  sessionitem_data.cpp
  sessionitem_data.h
  sessionmodel.cpp
  sessionmodel.h
  sessionmodel_v2.cpp
  sessionmodel_v2.h
  tagged_items.cpp
  tagged_items.h
  tagindex.cpp
  tagindex.h
  taginfo.cpp
  taginfo.h
  validate_utils.cpp
  validate_utils.h
  )
