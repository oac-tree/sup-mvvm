# Project main configuration

include(COACommonConfig)
include(COASetupCodacEnvironment)
include(COASetupQt)
include(CodeTools)
include(GenerateExportHeader)

# -----------------------------------------------------------------------------
# Directories
# -----------------------------------------------------------------------------
# directory for tests that produce output
set(SUP_MVVM_TESTRESULT_DIR ${CMAKE_CURRENT_BINARY_DIR}/test_result)
file(MAKE_DIRECTORY ${SUP_MVVM_TESTRESULT_DIR})

# directory for autogenerated configs
set(SUP_MVVM_AUTOGEN_DIR ${CMAKE_CURRENT_BINARY_DIR}/autogen/sup-mvvm)
file(MAKE_DIRECTORY ${SUP_MVVM_AUTOGEN_DIR})

# directory to build examples
set(SUP_MVVM_EXAMPLE_RUNTIME_DIR ${CMAKE_CURRENT_BINARY_DIR}/bin)
file(MAKE_DIRECTORY ${SUP_MVVM_EXAMPLE_RUNTIME_DIR})

# -----------------------------------------------------------------------------
# Dependencies
# -----------------------------------------------------------------------------
find_package(LibXml2 REQUIRED)
find_package(Threads)

# -----------------------------------------------------------------------------
# Generating config files
# -----------------------------------------------------------------------------
get_filename_component(SUP_MVVM_PROJECT_DIR "${CMAKE_CURRENT_LIST_DIR}/../.." ABSOLUTE)
configure_file(${SUP_MVVM_PROJECT_DIR}/cmake/configs/testconfig.h.in ${SUP_MVVM_AUTOGEN_DIR}/testconfig.h @ONLY)
configure_file(${SUP_MVVM_PROJECT_DIR}/cmake/configs/version_constants.h.in ${SUP_MVVM_AUTOGEN_DIR}/version_constants.h @ONLY)

# -----------------------------------------------------------------------------
# Special SetUp for WebAssembly build
# -----------------------------------------------------------------------------
if (COA_WEB_ASSEMBLY)
  add_compile_options("SHELL:-s USE_PTHREADS")
  add_link_options("SHELL:-s USE_PTHREADS")
  set(COA_BUILD_TESTS OFF)
  set(SUP_MVVM_BUILD_QCUSTOMPLOT OFF)
  add_definitions(-DCOA_WEB_ASSEMBLY)
endif()

# -----------------------------------------------------------------------------
# Compiler options
# -----------------------------------------------------------------------------
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wno-cpp -Wno-deprecated -Wno-deprecated-declarations")
if (COA_COVERAGE)
  message(STATUS "Enabling test coverage information")
  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -O0 -g -fno-inline --coverage")
endif()
